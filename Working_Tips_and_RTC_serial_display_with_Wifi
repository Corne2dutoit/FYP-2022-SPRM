
#include <ArduinoHttpClient.h>
#include <WiFiNINA.h>
#include <WiFiUdp.h>
#include <RTCZero.h>
#include <LiquidCrystal.h>
const int rs = 12, en =11, d4 = 6, d5 = 5, d6 = 4, d7 = 3;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);
int pin = 2;

char ssid[] = "AndroidAP";
char pass[] = "Micaela1";
int keyIndex = 0;
const char serverName[] = "";  // server name
int port = 80;

/* Create an rtc object */
RTCZero rtc;
WiFiClient wifi;
HttpClient client = HttpClient( wifi, serverName, port );
int status = WL_IDLE_STATUS;

const int GMT = 2;

void printTime()
{
  print2digits(rtc.getHours() + GMT);
  Serial.print(":");
  print2digits(rtc.getMinutes());
  Serial.print(":");
  print2digits(rtc.getSeconds());
  Serial.println();
}

void printDate()
{
 Serial.print(rtc.getDay());
  Serial.print("/");
  Serial.print(rtc.getMonth());
  Serial.print("/");
  Serial.print(rtc.getYear());
  Serial.print(" ");
}

void printWiFiStatus()
{
  Serial.print("SSID: ");
  Serial.println(WiFi.SSID());

  IPAddress ip = WiFi.localIP();
  Serial.print("IP Address: ");
  Serial.println(ip);

  long rssi = WiFi.RSSI();
  Serial.print("signal strength (RSSI): ");
  Serial.print(rssi);
  Serial.println(" dBm");

  lcd.setCursor(0,0);
  lcd.print(WiFi.SSID());
  lcd.setCursor(1,0);
  lcd.print(ip);
  
}

void print2digits(int number)
{
 if (number < 10) {
    Serial.print("0"); // print a 0 before if the number is < than 10
  }
  Serial.print(number);
}

void setup()
{
  pinMode(pin, INPUT);
  Serial.begin( 9600 );
  attachInterrupt(digitalPinToInterrupt(2), count, RISING);
  lcd.begin(16, 2);
  //lcd.print("Hello");
  
  if(WiFi.status() == WL_NO_SHIELD)
  {
    Serial.println("WiFi adapter not ready");
    while (true);
  }

  while (status != WL_CONNECTED)
  {
    Serial.print("Attempting to connect to SSID: ");
    Serial.println(ssid);
    status = WiFi.begin(ssid, pass);
    lcd.setCursor(0,0);
    lcd.print("Connecting:");
    lcd.setCursor(0,1);
    delay(10000);
    
    
  }

  printWiFiStatus();

  rtc.begin(); // initialize RTC

  unsigned long epoch;

  int numberOfTries = 0, maxTries = 6;

  do{
    epoch = WiFi.getTime();
    numberOfTries++;
  }

  while ((epoch == 0) && (numberOfTries < maxTries));
   
   if(numberOfTries == maxTries)
   {
     Serial.print("NTP unreachable");
     while(1);
   }

  else {
    Serial.print("Epoch recieved; ");
    Serial.println(epoch);
    rtc.setEpoch(epoch);
    Serial.println();
  }
}

int counter = 0;

void count()
{
  counter++;
}

void loop()
{
  printDate();
  printTime();
  Serial.println();
  delay(1000);
   
  String contentType = "application/x-www-form-urlencoded";
  
  String postData = "key1=value1&key2=value2";
  
  String postVariable = "Tip=";
  postData = postVariable + counter;

  client.post( "/rm/log.php", contentType, postData );

  int statusCode = client.responseStatusCode();
  Serial.print( "Status code: " );
  Serial.println( statusCode );
  String response = client.responseBody();
  Serial.print( "Response: " );
  Serial.println( response );

  Serial.println( "Wait 1 seconds" );
  delay( 1000 );

 
  Serial.println(counter);
 

}




